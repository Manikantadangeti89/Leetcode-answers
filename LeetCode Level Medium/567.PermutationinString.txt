567. Permutation in String

Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.
In other words, return true if one of s1's permutations is the substring of s2.

Example 1:
Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").

Example 2:
Input: s1 = "ab", s2 = "eidboaoo"
Output: false

Constraints:
1 <= s1.length, s2.length <= 104
s1 and s2 consist of lowercase English letters.

code:

class Solution {
    public boolean checkInclusion(String s1, String s2) {
        // Edge case: If s1 is longer than s2, no permutation can be a substring of s2
        if (s1.length() > s2.length()) return false;

        // Arrays to store frequency of characters
        int[] s1Freq = new int[26];  // Frequency of characters in s1
        int[] s2Freq = new int[26];  // Frequency of characters in the current window of s2

        // Fill the frequency array for s1
        for (char c : s1.toCharArray()) {
            s1Freq[c - 'a']++;
        }

        // Initialize the first window in s2 (of size s1.length())
        for (int i = 0; i < s1.length(); i++) {
            s2Freq[s2.charAt(i) - 'a']++;
        }

        // Compare the first window
        if (matches(s1Freq, s2Freq)) return true;

        // Start sliding the window over s2
        for (int i = s1.length(); i < s2.length(); i++) {
            // Add the current character (entering the window)
            s2Freq[s2.charAt(i) - 'a']++;

            // Remove the character that is sliding out of the window
            s2Freq[s2.charAt(i - s1.length()) - 'a']--;

            // Compare the frequency arrays
            if (matches(s1Freq, s2Freq)) return true;
        }

        return false;
    }
    private boolean matches(int[] s1Freq, int[] s2Freq) {
        for (int i = 0; i < 26; i++) {
            if (s1Freq[i] != s2Freq[i]) {
                return false;
            }
        }
        return true;
    }
}
