69. Sqrt(x)

Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.
You must not use any built-in exponent function or operator.
For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.
 
Example 1:
Input: x = 4
Output: 2
Explanation: The square root of 4 is 2, so we return 2.

Example 2:
Input: x = 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.

code:

class Solution {
    public int mySqrt(int x) {
        if (x == 0) return 0;  // Handle the case for 0
        int left = 1, right = x;
        int result = 0;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (mid == x / mid) {
                return mid;  // Exact square root
            } else if (mid < x / mid) {
                left = mid + 1;
                result = mid;  // Store the potential result
            } else {
                right = mid - 1;
            }
        }
        return result;  // The result will be the largest integer such that result^2 <= x
    }
}
