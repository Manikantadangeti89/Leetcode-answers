152. Maximum Product Subarray

Given an integer array nums, find a subarray that has the largest product, and return the product.
The test cases are generated so that the answer will fit in a 32-bit integer.

Example 1:
Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.

Example 2:
Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.

Constraints:
1 <= nums.length <= 2 * 104
-10 <= nums[i] <= 10
The product of any subarray of nums is guaranteed to fit in a 32-bit integer.

code:

class Solution {
    public int maxProduct(int[] nums) {
        int res=Integer.MIN_VALUE;
        for(int num:nums){
            res=num>res?num:res;
        }
        int max=1;
        int min=1;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==0){
                max=min=1;
                continue;
            }
            int temp=max*nums[i];
            max=Math.max(max*nums[i],Math.max(min*nums[i],nums[i]));
            min=Math.min(temp,Math.min(min*nums[i],nums[i]));
            res=Math.max(res,max);
        }
        return res;
    }
}