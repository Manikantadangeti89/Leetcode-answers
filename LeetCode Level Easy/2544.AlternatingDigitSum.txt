2544. Alternating Digit Sum

You are given a positive integer n. Each digit of n has a sign according to the following rules:
The most significant digit is assigned a positive sign.
Each other digit has an opposite sign to its adjacent digits.
Return the sum of all digits with their corresponding sign.

Example 1:
Input: n = 521
Output: 4
Explanation: (+5) + (-2) + (+1) = 4.

Example 2:
Input: n = 111
Output: 1
Explanation: (+1) + (-1) + (+1) = 1.

Example 3:
Input: n = 886996
Output: 0
Explanation: (+8) + (-8) + (+6) + (-9) + (+9) + (-6) = 0.

Constraints:
1 <= n <= 109

code:

class Solution {
    public int alternateDigitSum(int n) {
        int temp=n;
        int sum=0;
        int digits=0;
        while(n>0){
            n=n/10;
            digits++;
        }
        int i=0;
        while(temp>0){
            int rem=temp%10;
            if(digits%2==0){
                if(i%2==0){
                    sum-=rem;
                }else{
                    sum+=rem;
                }
            }else{
                if(i%2==0){
                    sum+=rem;
                }else{
                    sum-=rem;
                }
            }
            temp=temp/10;
            i++;
        }
        return sum;
    }
}